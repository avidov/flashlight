load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")

cpp_library(
    name = "experimental_memory",
    srcs = [
        "AllocationLog.cpp",
        "allocator/CompositeMemoryAllocator.cpp",
        "allocator/ConfigurableMemoryAllocator.cpp",
        "allocator/MemoryAllocator.cpp",
        "allocator/freelist/FreeList.cpp",
        "allocator/memorypool/MemoryPool.cpp",
        "optimizer/HeuristicsOptimizer.cpp",
        "optimizer/Optimizer.cpp",
        "optimizer/Simulator.cpp",
    ],
    headers = [
        "AllocationLog.h",
        "allocator/CompositeMemoryAllocator.h",
        "allocator/ConfigurableMemoryAllocator.h",
        "allocator/MemoryAllocator.h",
        "allocator/freelist/FreeList.h",
        "allocator/memorypool/MemoryPool.h",
        "optimizer/HeuristicsOptimizer.h",
        "optimizer/Optimizer.h",
        "optimizer/Simulator.h",
    ],
    deps = ["//deeplearning/projects/flashlight/flashlight/common:common"],
)

cpp_binary(
    name = "allocation_log_analyser",
    srcs = [
        "AllocationLogAnalyser.cpp",
    ],
    deps = [
        ":experimental_memory",
        "//deeplearning/projects/flashlight:flashlight",
    ],
    external_deps = [
        ("Cereal", None, "cereal"),
    ],
)

cpp_binary(
    name = "stand_alone_simulator",
    srcs = [
        "StandAloneSimulator.cpp",
    ],
    deps = [
        ":experimental_memory",
        "//deeplearning/projects/flashlight:flashlight",
    ],
)

cpp_binary(
    name = "stand_alone_optimizer",
    srcs = [
        "StandAloneOptimizer.cpp",
    ],
    headers = [
        "StandAloneOptimizer.h",
    ],
    deps = [
        ":experimental_memory",
        "//deeplearning/projects/flashlight:flashlight",
    ],
)
